      SUBROUTINE NT20(part,lpart,tpart)

*********************************************************
*                                                       *
* This file was generated by HUWFUN.                    *
*                                                       *
*********************************************************
*
*     Ntuple Id:      2    
*     Ntuple Title:   OMGEANT every event
*     Creation:       01/04/2007 23.56.59
*
*********************************************************
*
c$$$      integer flag
c$$$      INTEGER ieve,irun,iend
c$$$      COMMON /RUN/ ieve,irun,iend
c$$$*
c$$$      REAL bpara
c$$$      INTEGER ibtyp,ibfla
c$$$      COMMON /BEAM/ ibtyp,ibfla,bpara(6)
c$$$*
c$$$      REAL vert,ptra,xkinc,pkinc,thetcm,phicm,wgcros,anpower
c$$$      INTEGER nver,igev,ltimv,imov,ntdv,itdv,ntra,iget,itra,itvb,itve
c$$$     + ,nkinc,ietype
c$$$      COMMON /KINE/ nver,igev(120),vert(3,120),ltimv(120),imov(120)
c$$$     + ,ntdv(120),itdv(120),ntra,iget(250),ptra(3,250),itra(250)
c$$$     + ,itvb(250),itve(250),nkinc,xkinc(2),pkinc(3,2),ietype,thetcm
c$$$     + ,phicm,wgcros,anpower
c$$$*
c$$$      REAL hit,zhit,hitd,phit,hitsld,hition
c$$$      INTEGER nhit,nhitall,ip1hit,ip2hit
c$$$      COMMON /HIT/ nhit,nhitall,ip1hit(2000),ip2hit(2000),hit(2,2000)
c$$$     + ,zhit(2000),hitd(3,2000),phit(2000),hitsld(2,2000),hition(2000)
c$$$*
c$$$      INTEGER ndig,ndigall,ip1dig,ip2dig,npdig,jpdig
c$$$      COMMON /DIG/ ndig,ndigall,ip1dig(1299),ip2dig(1299),npdig
c$$$     + ,jpdig(1428)

*      *********************************************************
*                                                       *
* This file was generated by HUWFUN.                    *
*                                                       *
*********************************************************
*
*     Ntuple Id:      2    
*     Ntuple Title:   OMGEANT every event
*     Creation:       27/11/2008 00.53.21
*
*********************************************************
*
c$$$      LOGICAL         CHAIN
c$$$      CHARACTER*128   CFILE
c$$$      INTEGER         IDNEVT,NCHEVT,ICHEVT
c$$$      REAL            OBS(13)
c$$$*
c$$$      COMMON /PAWIDN/ IDNEVT,OBS
c$$$      COMMON /PAWCHN/ CHAIN, NCHEVT, ICHEVT
c$$$      COMMON /PAWCHC/ CFILE
*
*--   Ntuple Variable Declarations
*
      REAL bpara(6),vert(3,120),ptra(3,250),trlast(3,250),xkinc(2)
     + ,pkinc(3,2),thetcm,phicm,wgcros,anpower,hit(2,2000),zhit(2000)
     + ,hitd(3,2000),phit(2000),hitsld(2,2000),hition(2000)
      INTEGER ieve,irun,iend,ibtyp,ibfla,nver,igev(120),ltimv(120)
     + ,imov(120),ntdv(120),itdv(120),ntra,iget(250),itra(250),itvb(250)
     + ,itve(250),itrstop(250),nkinc,ietype,nhit,nhitall,ip1hit(2000)
     + ,ip2hit(2000),ndig,ndigall,ip1dig(1299),ip2dig(1299),npdig
     + ,jpdig(1428)
*
      COMMON /PAWCR4/ ieve,irun,iend,ibtyp,ibfla,bpara,nver,igev,vert
     + ,ltimv,imov,ntdv,itdv,ntra,iget,ptra,itra,itvb,itve,trlast
     + ,itrstop,nkinc,xkinc,pkinc,ietype,thetcm,phicm,wgcros,anpower
     + ,nhit,nhitall,ip1hit,ip2hit,hit,zhit,hitd,phit,hitsld,hition,ndig
     + ,ndigall,ip1dig,ip2dig,npdig,jpdig


      real x,q2,w,wp,z,pt
      real hitnum1_1,hitnum1_2
      real hitnum2_1,hitnum2_2
      
      real theta_e,theta_h,p_e,p_h,phi_e,phi_h
      real sdxs_e,sdxs_h,cdxs,temp
      real weight
      real temp1(2),temp2(2)

      real beam_energy,factor

      integer neve,part,success,lpart,tpart
      common /general/ neve,x,q2,w,wp,z,pt,hitnum1_1,hitnum1_2,
     c     hitnum2_1,hitnum2_2,
     c     theta_e,theta_h,p_e,p_h,phi_e,phi_h,sdxs_e,sdxs_h
     c     ,cdxs,weight

      real pe_temp,ph_temp;
      
      real N_r,N_s,rho,length,pressure,current

      CALL HBNAME(2,' ',0,'$CLEAR')
      CALL HBNAME(2,'RUN',ieve,'$SET')
*
      CALL HBNAME(2,'BEAM',ibtyp,'$SET')
*
      CALL HBNAME(2,'KINE',nver,'$SET')
*
      CALL HBNAME(2,'HIT',nhit,'$SET')
*
      CALL HBNAME(2,'DIG',ndig,'$SET')

            
      call Hnoent (2,Noent2)
      do i=1,Noent2
         call HGNT(2,i,IERR)
         neve = i
         
         x=qgetkin(9,0.0,part)
         z=qgetkin(4,0.0,part)
         q2=qgetkin(2,0.0,part)
         w=qgetkin(3,0.0,part)
         wp=qgetkin(5,0.0,part)
         pt=qgetkin(6,0.0,part)
         p_e = getkinp(0,2)
         p_h = getkinp(0,3)
         phi_e = getkinp(4,2)
         phi_h = getkinp(4,3)
         theta_e = getkinp(3,2)
         theta_h = getkinp(3,3)
         beam_energy = getkinp(0,1)*1000;

         hitnum2_1=hitraxy(-8,8,0,3)
         hitnum1_1=hitraxy(-8,8,0,2)
         hitnum2_2=hitraxy(-8,9,0,3)
         hitnum1_2=hitraxy(-8,9,0,2)
         
         
         weight = wgcros
         !print*,wgcros

         if ((w.ge.2.3).and.(wp.ge.1.6).and.(abs(z-0.5).le.0.2)
     c        .and.(q2.ge.1.0).and.(x.le.1.).and.(theta_e.le.30.)
     c        .and.(theta_h.le.30.).and.(hitnum1_1.ge.1.0.or.
     c        hitnum1_2.ge.1.0).and.hitnum2_1.ge.1.0
     c        .and.weight.ge.0.
     c        ) then

            pe_temp = p_e*1000.0
            ph_temp = p_h*1000.0

            call whitlow(2,beam_energy,pe_temp,0.0,pe_temp
     c           ,theta_e,0.0,theta_e,sdxs_e,success)
            
            if (success.ne.0.or.sdxs_e.le.0.or.sdxs_e.ge.10000.) then
               call qfsrad(beam_energy/1000.,p_e,theta_e/180.*3.1415926
     c              ,0,sdxs_e,success)
               call qfsrad(beam_energy/1000.,p_e,theta_e/180.*3.1415926
     c              ,1,temp,success)
               sdxs_e=sdxs_e + temp
               if (sdxs_e.ge.0.and.sdxs_e.le.1000000) then
               else
                  sdxs_e = 0
               endif
            endif
              
            call wiser(lpart,0,beam_energy,ph_temp,0.1,ph_temp,
     c           theta_h,0.1
     c           ,theta_h,sdxs_h,success)
            call wiser(lpart,1,beam_energy,ph_temp,0.1,ph_temp,
     c           theta_h,0.1
     c           ,theta_h,temp,success)
            sdxs_h = sdxs_h+temp

            factor = (2.33369*exp(-0.508963*p_h*
     c           sin(theta_h/180.*3.1415926)*sqrt(0.938*0.938
     c           +2.*0.938*5.892)/sqrt(0.938*0.938+2.*0.938
     c           *beam_energy/1000.)))

            if (factor.le.1) factor = 1

            sdxs_h = sdxs_h /factor
            
            if (sdxs_h.le.0.or.success.ne.0) then
               sdxs_h = 0
            endif

            
            

            pressure=11.0        ! atm
            length=40.0          ! cm
            current = 15.0       ! muA
            rho=pressure*101310.0/300.0/1.38
            N_s=rho*length
            
            N_r=current/1.602
            sdxs_h = sdxs_h*N_r*N_s*10.**(-12.)*2.
            ! 2ns window
            
            if (success.eq.1.or.sdxs_h.le.0.0) then
               sdxs_h = 0.0
            endif
                        
            
            CALL SIDIS(0,0,beam_energy,pe_temp,pe_temp
     c           ,theta_e,
     c           theta_e,phi_e,phi_e,ph_temp,ph_temp,theta_h
     c           ,theta_h
     c           ,phi_h,phi_h,temp1)
            CALL SIDIS(1,0,beam_energy,pe_temp,pe_temp
     c           ,theta_e,
     c           theta_e,phi_e,phi_e,ph_temp,ph_temp,theta_h
     c           ,theta_h
     c           ,phi_h,phi_h,temp2)

                        

            if (lpart.eq.1) then
               cdxs = temp1(1) + temp2(1)
            elseif (lpart.eq.2) then
               cdxs = temp1(2) + temp2(2)
            elseif (lpart.eq.3) then
               cdxs = temp1(1) + temp2(1)
            elseif (lpart.eq.4) then
               cdxs = temp1(2) + temp2(2)   
            endif

            
            
            call hfnt(9500)
         endif
      enddo

      end
