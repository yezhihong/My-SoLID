c      INCLUDE 'getkinp.f'
      
      real function qgetkin(IFL,phi,part)
C     IFL=1 nu
C     IFL=2 Q2
C     IFL=3 W
C     IFL=4 z
C     IFL=5 Wp
C     IFL=6 Pt
C     IFL=7 phi_S
C     IFL=8 phi_h
C     IFL=9 x
C     IFL=10 phi_h-phi_S
C     IFL=11 phi_h+phi_S
C     IFL=12 y
C     part=1 for pion
C     part=2 for kaon

      implicit none
*********************************************************
*                                                       *
* This file was generated by HUWFUN.                    *
*                                                       *
*********************************************************
*
*     Ntuple Id:      9500 
*     Ntuple Title:   OMGEANT every event
*     Creation:       02/10/2008 23.33.35
*
*********************************************************
*
c$$$      INTEGER ieve,irun,iend
c$$$      COMMON /RUN/ ieve,irun,iend
c$$$*
c$$$      REAL bpara
c$$$      INTEGER ibtyp,ibfla
c$$$      COMMON /BEAM/ ibtyp,ibfla,bpara(6)
c$$$*
c$$$      REAL vert,ptra,xkinc,pkinc,thetcm,phicm,wgcros,anpower
c$$$      INTEGER nver,igev,ltimv,imov,ntdv,itdv,ntra,iget,itra,itvb,itve
c$$$     + ,nkinc,ietype
c$$$      COMMON /KINE/ nver,igev(120),vert(3,120),ltimv(120),imov(120)
c$$$     + ,ntdv(120),itdv(120),ntra,iget(250),ptra(3,250),itra(250)
c$$$     + ,itvb(250),itve(250),nkinc,xkinc(2),pkinc(3,2),ietype,thetcm
c$$$     + ,phicm,wgcros,anpower
c$$$*
c$$$      REAL hit,zhit,hitd,phit,hitsld,hition
c$$$      INTEGER nhit,nhitall,ip1hit,ip2hit
c$$$      COMMON /HIT/ nhit,nhitall,ip1hit(2000),ip2hit(2000),hit(2,2000)
c$$$     + ,zhit(2000),hitd(3,2000),phit(2000),hitsld(2,2000),hition(2000)
c$$$*
c$$$      INTEGER ndig,ndigall,ip1dig,ip2dig,npdig,jpdig
c$$$      COMMON /DIG/ ndig,ndigall,ip1dig(1299),ip2dig(1299),npdig
c$$$     + ,jpdig(1428)

c$$$      LOGICAL         CHAIN
c$$$      CHARACTER*128   CFILE
c$$$      INTEGER         IDNEVT,NCHEVT,ICHEVT
c$$$      REAL            OBS(13)
c$$$*
c$$$      COMMON /PAWIDN/ IDNEVT,OBS
c$$$      COMMON /PAWCHN/ CHAIN, NCHEVT, ICHEVT
c$$$      COMMON /PAWCHC/ CFILE
*
*--   Ntuple Variable Declarations
*
      REAL bpara(6),vert(3,120),ptra(3,250),trlast(3,250),xkinc(2)
     + ,pkinc(3,2),thetcm,phicm,wgcros,anpower,hit(2,2000),zhit(2000)
     + ,hitd(3,2000),phit(2000),hitsld(2,2000),hition(2000)
      INTEGER ieve,irun,iend,ibtyp,ibfla,nver,igev(120),ltimv(120)
     + ,imov(120),ntdv(120),itdv(120),ntra,iget(250),itra(250),itvb(250)
     + ,itve(250),itrstop(250),nkinc,ietype,nhit,nhitall,ip1hit(2000)
     + ,ip2hit(2000),ndig,ndigall,ip1dig(1299),ip2dig(1299),npdig
     + ,jpdig(1428)
*
      COMMON /PAWCR4/ ieve,irun,iend,ibtyp,ibfla,bpara,nver,igev,vert
     + ,ltimv,imov,ntdv,itdv,ntra,iget,ptra,itra,itvb,itve,trlast
     + ,itrstop,nkinc,xkinc,pkinc,ietype,thetcm,phicm,wgcros,anpower
     + ,nhit,nhitall,ip1hit,ip2hit,hit,zhit,hitd,phit,hitsld,hition,ndig
     + ,ndigall,ip1dig,ip2dig,npdig,jpdig
      
      integer IFL,i,part
      real phi
      real mn,me,mpi,mk
      real peini(5),pefin(5),phfin(5)
      real thetae,phie,thetah,phih
      real nu,x,q2,w,z,wp,pt,wp2,y
      real q(3),thetapq
      real getkinp
      real phi_S,phi_h
      real phihms,phihps
      real scaplan(3),hadplan(3),spin(3),spinplan(3)
      real stafirst(3),stasecond(3)
      real firstplan(3),secondplan(3),standard(3)
      real qphis(3),qphih(3)

      mn  = 0.93956536
      me  = 0.000511
      mpi = 0.13957
      mk  = 0.493677
      
      if (IFL.le.0.or.IFL.ge.13) go to 999
      if (phi.lt.0..or.phi.gt.360.) go to 999
      
      thetae=(getkinp(3,2))/180.*3.1415926
      phie=getkinp(4,2)/180.*3.1415926
      thetah=(getkinp(3,3))/180.*3.1415926
      phih=getkinp(4,3)/180.*3.1415926

      peini(4)=getkinp(1,1)
      pefin(4)=getkinp(1,2)
      phfin(4)=getkinp(1,3)

      peini(5)=sqrt(peini(4)**2-me**2)
      pefin(5)=sqrt(pefin(4)**2-me**2)

      if (part.eq.1) then
         phfin(5)=sqrt(phfin(4)**2-mpi**2)
      else
         phfin(5)=sqrt(phfin(4)**2-mk**2)
      endif
      
      peini(1)=0.
      peini(2)=0.
      peini(3)=peini(5)

      pefin(1)=pefin(5)*sin(thetae)*cos(phie)
      pefin(2)=pefin(5)*sin(thetae)*sin(phie)
      pefin(3)=pefin(5)*cos(thetae)

      phfin(1)=phfin(5)*sin(thetah)*cos(phih)
      phfin(2)=phfin(5)*sin(thetah)*sin(phih)
      phfin(3)=phfin(5)*cos(thetah)
      
      q(1)=peini(1)-pefin(1)
      q(2)=peini(2)-pefin(2)
      q(3)=peini(3)-pefin(3)

      nu=peini(4)-pefin(4)
      q2=q(1)**2+q(2)**2+q(3)**2-nu**2
      x=q2/2./mn/nu
      w=sqrt((nu+mn)**2-q(1)**2-q(2)**2-q(3)**2)
      y=nu/peini(4)

*      x=getkinp(5,2)
*      q2=getkinp(6,2)
*      w=sqrt(getkinp(7,2))
      z=phfin(4)/nu
      
      wp2=(mn + nu - phfin(4))**2-(q(1)-phfin(1))**2-(q(2)-phfin(2))**2
     c     -(q(3)-phfin(3))**2
      if (wp2.gt.0) then
         wp=sqrt(wp2)
      else
         wp=0.
      endif


      thetapq=acos((q(1)*phfin(1)+q(2)*phfin(2)+q(3)*phfin(3))/
     c     sqrt(q(1)**2+q(2)**2+q(3)**2)/
     c     sqrt(phfin(1)**2+phfin(2)**2+phfin(3)**2))
      pt=sqrt(phfin(1)**2+phfin(2)**2+phfin(3)**2)*sin(thetapq)

      

      spin(1)=cos(phi/180.*3.1415926)
      spin(2)=sin(phi/180.*3.1415926)
      spin(3)=0.
      

      spinplan(1)=q(2)*spin(3)-q(3)*spin(2)
      spinplan(2)=q(3)*spin(1)-q(1)*spin(3)
      spinplan(3)=q(1)*spin(2)-q(2)*spin(1)

      scaplan(1)=q(2)*pefin(3)-q(3)*pefin(2)
      scaplan(2)=q(3)*pefin(1)-q(1)*pefin(3)
      scaplan(3)=q(1)*pefin(2)-q(2)*pefin(1)

      hadplan(1)=q(2)*phfin(3)-q(3)*phfin(2)
      hadplan(2)=q(3)*phfin(1)-q(1)*phfin(3)
      hadplan(3)=q(1)*phfin(2)-q(2)*phfin(1)
      
      stafirst(1)=1.
      stafirst(2)=0.
      stafirst(3)=0.
      
      stasecond(1)=0.
      stasecond(2)=1.
      stasecond(3)=0.
      
      firstplan(1)=peini(2)*stafirst(3)-peini(3)*stafirst(2)
      firstplan(2)=peini(3)*stafirst(1)-peini(1)*stafirst(3)
      firstplan(3)=peini(1)*stafirst(2)-peini(2)*stafirst(1)

      secondplan(1)=peini(2)*stasecond(3)-peini(3)*stasecond(2)
      secondplan(2)=peini(3)*stasecond(1)-peini(1)*stasecond(3)
      secondplan(3)=peini(1)*stasecond(2)-peini(2)*stasecond(1)

      
      standard(1)=firstplan(2)*secondplan(3)-firstplan(3)*secondplan(2)
      standard(2)=firstplan(3)*secondplan(1)-firstplan(1)*secondplan(3)
      standard(3)=firstplan(1)*secondplan(2)-firstplan(2)*secondplan(1)
      
      
      qphis(1)=scaplan(2)*spinplan(3)-scaplan(3)*spinplan(2)
      qphis(2)=scaplan(3)*spinplan(1)-scaplan(1)*spinplan(3)
      qphis(3)=scaplan(1)*spinplan(2)-scaplan(2)*spinplan(1)

      qphih(1)=scaplan(2)*hadplan(3)-scaplan(3)*hadplan(2)
      qphih(2)=scaplan(3)*hadplan(1)-scaplan(1)*hadplan(3)
      qphih(3)=scaplan(1)*hadplan(2)-scaplan(2)*hadplan(1)


      phi_S=acos((scaplan(1)*spinplan(1)+scaplan(2)*spinplan(2)
     c     +scaplan(3)*spinplan(3))/
     c     sqrt(scaplan(1)**2+scaplan(2)**2+scaplan(3)**2)/
     c     sqrt(spinplan(1)**2+spinplan(2)**2+spinplan(3)**2))

      
      phi_h=acos((scaplan(1)*hadplan(1)+scaplan(2)*hadplan(2)
     c     +scaplan(3)*hadplan(3))/
     c     sqrt(scaplan(1)**2+scaplan(2)**2+scaplan(3)**2)/
     c     sqrt(hadplan(1)**2+hadplan(2)**2+hadplan(3)**2))

      if ((qphis(1)*standard(1)+qphis(2)*standard(2)
     c     +qphis(3)*standard(3)).lt.0.) then
         phi_S=(-phi_S+2.*3.1415926)*180./3.1415926
      else
         phi_S=phi_S*180./3.1415926
      endif
      
      if ((qphih(1)*standard(1)+qphih(2)*standard(2)
     c     +qphih(3)*standard(3)).lt.0.) then
         phi_h=(-phi_h+2.*3.1415926)*180./3.1415926
      else
         phi_h=phi_h*180./3.1415926
      endif

      phihms=phi_h-phi_S
      phihps=phi_h+phi_S
      
      if (phihms.lt.0.) phihms=phihms+360.
      if (phihms.lt.0.) phihms=phihms+360.
      if (phihms.gt.360.) phihms=phihms-360.
      if (phihms.gt.360.) phihms=phihms-360.
      
      if (phihps.lt.0.) phihps=phihps+360.
      if (phihps.lt.0.) phihps=phihps+360.
      if (phihps.gt.360.) phihps=phihps-360.
      if (phihps.gt.360.) phihps=phihps-360.
      
      

      If (IFL.eq.1) then
         qgetkin=nu
      else if (IFL.eq.2) then
         qgetkin=q2
      else if (IFL.eq.3) then
         qgetkin=w
      else if (IFL.eq.4) then
         qgetkin=z
      else if (IFL.eq.5) then
         qgetkin=wp
      else if (IFL.eq.6) then
         qgetkin=pt
      else if (IFL.eq.7) then
         qgetkin=phi_S
      else if (IFL.eq.8) then
         qgetkin=phi_h
      else if (IFL.eq.9) then
         qgetkin=x
      else if (IFL.eq.10) then
         qgetkin=phihms
      else if (IFL.eq.11) then
         qgetkin=phihps
      else
         qgetkin=y
      endif

 999   return
       end
